name: Publish Docker image

on:
  push:
    branches:
      - main
      - '*'


jobs:
  push_to_registry:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          
      - name: Build docker image
        run: docker build -t 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2030:latest .
        
      - name: Authentication in Docker with AWS ECR
        run: aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
    
      - name: Push the Docker image to ECR
        if: github.ref == 'refs/heads/main'
        run: |
            COMMIT_HASH=$(git rev-parse --short=8 HEAD)
            IMAGE_URI=244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2030
            docker tag 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2030:latest $IMAGE_URI:$COMMIT_HASH
            docker push $IMAGE_URI:$COMMIT_HASH
            docker push $IMAGE_URI:latest
            
  terraform:
    name: "Terraform"
    needs: push_to_registry
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2030:latest
      PREFIX: glennbech3
 
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: |
          cd infra
          terraform init

      - name: Terraform Plan
        id: plan
        run: |
          cd infra
          terraform plan -var="prefix=${{ env.PREFIX }}" -var="image=${{ env.IMAGE }}" -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          cd infra
          terraform apply -var="prefix=${{ env.PREFIX }}" -var="image=${{ env.IMAGE }}" -auto-approve
        